import discord
import os
import json
import logging
from discord import Message, message
from discord.ext import commands
from discord.ui import Button, View
from pathlib import Path

cwd = Path(__file__).parents[0]
cwd = str(cwd)
cfx = json.load(open(cwd+'\json\cfx.json', encoding='utf-8'))

token = os.environ["DBOTTOKEN"]
intents = discord.Intents.all()
intents.message_content = True
#—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –µ—Å—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã - streaming, playing, listening, watching, competing
# + –µ—Å—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç—ã unknown –∏ custom - –ø–µ—Ä–≤—ã–π –≥–æ–≤–æ—Ä–∏—Ç —Å–∞–º –∑–∞ —Å–µ–±—è, –∞ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤—Ç–æ—Ä–æ–π —è –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω—è–ª
activity = discord.Activity(name='–≥–æ–ª–æ—Å–∞ –≤ —Å–≤–æ–µ–π –≥–æ–ª–æ–≤–µ', type=discord.ActivityType.listening)
Bot = commands.Bot(command_prefix=cfx['prefix'], activity=activity, intents=intents, owner_id=cfx['owner'])
logging.basicConfig(level=logging.DEBUG)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
# P.S. —è —Ç–∞–∫ –∏ –Ω–µ –ø–æ–Ω—è–ª –ø–æ—á–µ–º—É –æ–Ω –∫–æ–ø–∏—Ä—É–µ—Ç –≤—Å–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤ –∞—Ä–≥—É–º–µ–Ω—Ç–∞—Ö —Ñ—É–Ω–∫—Ü–∏–∏ –µ—Å—Ç—å *, arg –ø–æ—Å–ª–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
# P.S.S - –ø–æ –ø–æ–≤–æ–¥—É –∫–æ–Ω—Ç–µ–∫—Ç–∞ - https://discordpy.readthedocs.io/en/latest/ext/commands/api.html#discord.ext.commands.Context
@Bot.command()
async def tm(ctx, *, arg: str):
    await ctx.send(arg, delete_after=3)

@Bot.command()
async def stats(ctx):
    await ctx.send( f'```diff\n'+
                    f'discord version - {discord.__version__}\n'+
                    f'server count - {len(Bot.guilds)}\n'+
                    f'nmember count - {len(set(Bot.get_all_members()))}'+
                    '```')

@Bot.command()
async def OC(ctx):
    if ctx.message.author.id == cfx['owner']:
        await ctx.send('1')
    else:
        await ctx.send(f'{ctx.message.author.id}\n'+
                       f'{cfx["owner"]}\n{type(cfx["owner"])}')

#TODO - –±–∞–∑–æ–≤—ã–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª —ç–º–æ–¥–∑–∏ + callback –Ω–∞ –Ω–∞–∂–∞—Ç–∏—è 
@Bot.command()
async def et(ctx):
    await ctx.send("_")
    emoji = 'ü§î'
    await ctx.message.add_reaction(emoji)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–∞–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –õ–°
@Bot.command()
async def dm(ctx):
    user = Bot.get_user(ctx.author.id)
    await user.send(f'no way!\ndm is working!')

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∫–Ω–æ–ø–æ–∫ —á–µ—Ä–µ–∑ UI –¥–∏—Å–∫–æ—Ä–¥–∞
@Bot.command()
async def test(ctx):
        # callback —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª - –≤ –¥–∞–Ω–Ω–æ–º –≤–∏–¥–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–µ–ª–∞—è –µ–≥–æ "–ø—É—Å—Ç—ã–º"
        # —Å–¥–µ–ª–∞—Ç—å –µ–≥–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø—É—Å—Ç—ã–º —Å–¥–µ–ª–∞–≤ " " –Ω–µ–ª—å–∑—è, –¥–∏—Å–∫–æ—Ä–¥ –±—É–¥–µ—Ç —Ä—É–≥–∞—Ç—Å—è, –Ω–æ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        async def button_callback(interaction):
            await interaction.response.edit_message(content="_", view=None)

        button = Button(label="BTN_TST", style=discord.ButtonStyle.danger, custom_id='button1')
        view = View()
        view.add_item(button)

        await ctx.send(view=view)

        button.callback = button_callback

Bot.run(token)